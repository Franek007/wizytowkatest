var quoteText,changeThemeBtns,chagneThemeBtnColor,quoteAthor,quoteAuthor,apostropheIcon,headingBox,technologiesBox,carouselBoxes,timeout,move,contactSendBtn,emailInput,nameInput,msgInput,checkboxInput,checkBoxParent,index=1,speed=30,quote="Jedyną osobą, którą jesteś przeznaczony się stać, jest ta, którą postanowisz się staćć",quoteAuthorText="— Ralph Waldo Emerson",isDragging=!1,startX=0,endX=0,main=function(){prepareDOMElements2(),prepareDOMEvents2()},prepareDOMElements2=function(){quoteText=document.querySelector(".header__quote"),quoteAuthor=document.querySelector(".header__qoute-author"),apostropheIcon=document.querySelector(".fa-quote-left"),headingBox=document.querySelector(".header__heading-box"),technologiesBox=document.querySelector(".about__slider"),carouselBoxes=document.querySelectorAll(".about__slider-box"),contactSendBtn=document.querySelector(".contact__btn"),emailInput=document.getElementById("email"),nameInput=document.getElementById("name"),msgInput=document.getElementById("msg"),checkboxInput=document.querySelector(".contact__checkbox"),checkBoxParent=document.querySelector(".contact__checkbox-box")},prepareDOMEvents2=function(){carouselBoxes.forEach(function(e){e.addEventListener("mouseenter",function(){carouselBoxes.forEach(function(e){e.style.animationPlayState="paused"})}),e.addEventListener("mouseleave",function(){carouselBoxes.forEach(function(e){e.style.animationPlayState="running"})}),e.addEventListener("touchstart",function(){carouselBoxes.forEach(function(e){e.style.animationPlayState="paused"})}),e.addEventListener("touchend",function(){carouselBoxes.forEach(function(e){e.style.animationPlayState="running"})})}),technologiesBox.addEventListener("mouseleave",function(){isDragging=!1,technologiesBox.style.cursor="grab"}),technologiesBox.addEventListener("mousedown",function(e){isDragging=!0,startX=e.clientX,technologiesBox.style.cursor="grabbing"}),technologiesBox.addEventListener("touchstart",function(e){startX=e.touches[0].clientX}),technologiesBox.addEventListener("mousemove",function(){1!=isDragging&&(technologiesBox.style.cursor="grab")}),technologiesBox.addEventListener("mouseup",function(e){endX=e.clientX,move=endX-startX,technologiesBox.style.cursor="grab",handleCarousel()}),technologiesBox.addEventListener("touchend",function(e){endX=e.changedTouches[0].clientX,move=endX-startX,handleCarousel()}),contactSendBtn.addEventListener("click",handleContactForm),_writingAnimation()},handleContactForm=function(){function t(e,t){(e=e.parentElement).querySelector(".contact__form-error").textContent=t,e.classList.add("contact__form-error-input")}function n(e){(e=e.parentElement).querySelector(".contact__form-error").textContent="",e.classList.remove("contact__form-error-input")}var e=document.querySelector(".contact__msg-status");"?mail_status=sent"===document.location.search&&(e.classList.add("success"),e.textContent="Wiadomość wysłana!",setTimeout(function(){e.classList.remove("success")},3e3)),"?mail_status=error"===document.location.search&&(e.classList.add("error"),e.textContent="Wystąpił błąd.",setTimeout(function(){e.classList.remove("error")},3e3));0==checkboxInput.checked?(checkBoxParent.style.border="1px solid var(--color-accent)",checkBoxParent.style.padding="0.5em 1em"):(checkBoxParent.style.border="none",checkBoxParent.style.padding="0"),[emailInput,msgInput,nameInput].forEach(function(e){""===e.value?t(e,e.placeholder):n(e)}),/^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})$/.test(email.value)?n(email):t(email,"E-mail jest niepoprawny")},_writingAnimation=function(){var e;index>=quote.length?(e=index-quote.length,quoteAuthor.innerHTML=quoteAuthorText.slice(0,e)):quoteText.innerHTML=quote.slice(0,index),index<=quote.length+quoteAuthorText.length&&(index++,timeout=setTimeout(_writingAnimation,speed))},handleCarousel=function(e){carouselBoxes.forEach(function(e){e.style.transform="translateX(".concat(move,"px)")})};document.addEventListener("DOMContentLoaded",main);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
